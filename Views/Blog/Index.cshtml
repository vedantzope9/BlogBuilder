@model IEnumerable<BlogBuilder.DTOs.BlogDTO>
@{
    // All Blogs
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    body {
        background-color: #f8f9fa;
        color: #333;
        transition: background-color 0.5s ease, color 0.5s ease;
    }

    body.dark-mode {
        background-color: #121212;
        color: #eee;
    }

    .dashboard-header {
        padding: 0.5rem 0;
        margin-bottom: 1rem;
        border-bottom: 1px solid rgba(0,0,0,0.1);
    }

    .welcome-text {
        font-size: 1.4rem;
        font-weight: 600;
        color: #6a1b9a;
        padding-left: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.4rem;
    }

    .wave {
        display: inline-block;
        animation: wave-hand 2s infinite ease-in-out;
        transform-origin: 70% 70%;
    }

    @@keyframes wave-hand {
        0% {
            transform: rotate(0deg);
        }
        15% {
            transform: rotate(15deg);
        }

        30% {
            transform: rotate(-10deg);
        }

        45% {
            transform: rotate(12deg);
        }

        60% {
            transform: rotate(-7deg);
        }

        75% {
            transform: rotate(10deg);
        }

        100% {
            transform: rotate(0deg);
        }
    }

    body.dark-mode .welcome-text {
        color: #f0e6ff;
    }

    .dashboard-title {
        text-align: center;
        font-size: 2rem;
        font-weight: bold;
        margin-top: 0.5rem 0;
        background: linear-gradient(to right, #9b59b6, #e67e22);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        animation: fadeInUp 1s;
    }

    .dashboard-actions {
        text-align: center;
        margin-top: 1rem;
    }

    .btn-gradient {
        display: inline-block;
        padding: 0.6rem 1.6rem;
        border-radius: 50px;
        background: linear-gradient(to right, #8e44ad, #5e2a7a);
        color: #fff !important;
        font-weight: bold;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 6px 18px rgba(142, 68, 173, 0.4);
        text-decoration: none;
    }

        .btn-gradient:hover {
            transform: scale(1.08);
            box-shadow: 0 10px 28px rgba(142, 68, 173, 0.6);
        }

    /* Card */
    .blog-card {
        display: flex;
        flex-direction: column;
        height: 100%;
        border-radius: 1rem;
        background: #fff;
        box-shadow: 0 6px 18px rgba(0, 0, 0, 0.12);
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid rgba(0,0,0,0.08);
        animation: fadeInUp 1s;
    }

    .blog-card:hover {
        transform: translateY(-6px) scale(1.02);
        box-shadow: 0 10px 28px rgba(0, 0, 0, 0.25);
    }

    /* Image wrapper */
    .blog-card .blog-image {
        width: 100%;
        height: 180px; /* uniform image height */
        background: #f0f0f0;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    .blog-card .blog-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .blog-card .blog-image span {
        color: #aaa;
        font-size: 0.9rem;
    }

    /* Card body */
    .blog-body {
        flex: 1;
        display: flex;
        flex-direction: column;
        padding: 1rem 1.2rem;
    }

    .blog-title {
        font-size: 1.2rem;
        font-weight: bold;
        color: #5e2a7a;
        margin-bottom: 0.4rem;
    }

    .blog-meta {
        font-size: 0.85rem;
        color: #777;
        margin-bottom: 0.6rem;
    }

    /* Limit excerpt */
    .blog-excerpt {
        font-size: 0.95rem;
        line-height: 1.5;
        color: #444;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 4; /* show 4 lines max */
        -webkit-box-orient: vertical;

    }

    .blog-content {
        word-wrap: break-word;
        line-height: 1.6;
    }

    .blog-content .ql-size-small {
        font-size: 0.75em;
    }

    .blog-content .ql-size-large {
        font-size: 1.5em;
    }

    .blog-content .ql-size-huge {
        font-size: 2.5em;
    }

    /* Dark Mode */
    body.dark-mode .blog-card {
        background: #1e1e1e;
        border: 1px solid #333;
    }

    body.dark-mode .blog-title {
        color: #e0c3fc;
    }

    body.dark-mode .blog-meta,
    body.dark-mode .blog-excerpt {
        color: #ccc;
    }

    /* Toolbar */
    .dashboard-toolbar {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 1rem;
        margin: 1.2rem auto 0 auto;
        max-width: 1000px;
        animation: fadeInUp 1s;
    }

    .btn-toolbar {
        padding: 0.6rem 1.4rem;
        border-radius: 50px;
        border: none;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 6px 18px rgba(0, 0, 0, 0.12);
        text-decoration: none;
        display: inline-block;
    }

    .btn-purple {
        background: linear-gradient(to right, #8e44ad, #5e2a7a);
        color: #fff;
    }

    .btn-purple:hover {
        transform: scale(1.07);
        box-shadow: 0 8px 22px rgba(142, 68, 173, 0.5);
    }

    .input-wrapper {
        position: relative;
        display: flex;
        align-items: center;
    }

    .input-icon {
        position: absolute;
        left: 14px;
        font-size: 1rem;
        color: #777;
        pointer-events: none;
    }

    .search-input, .topic-select {
        padding: 0.6rem 1rem 0.6rem 2.2rem;
        border-radius: 50px;
        border: 1px solid #ccc;
        outline: none;
        transition: all 0.3s ease;
    }

    .search-blogs {
        min-width: 350px;
    }


    .topic-select {
        min-width: 220px; 
        appearance: none;
        background: #fff;
        cursor: pointer;
    }

    .search-input:focus, .topic-select:focus {
        border-color: #8e44ad;
        box-shadow: 0 0 8px rgba(142, 68, 173, 0.4);
    }

    /* Dark mode toolbar */
    body.dark-mode .search-input,
    body.dark-mode .topic-select {
        background: #1e1e1e;
        color: #eee;
        border: 1px solid #555;
    }

    body.dark-mode .search-input:focus,
    body.dark-mode .topic-select:focus {
        border-color: #e0c3fc;
        box-shadow: 0 0 8px rgba(224, 195, 252, 0.5);
    }

</style>

<section class="mt-1">
    <div class="container">
        <div class="dashboard-header">
            <div class="welcome-text" id="welcome-text">
                Welcome<span id="username"></span> <span class="wave">👋</span>
            </div>
            <div class="dashboard-title">Explore All Blogs</div>

            <!-- Toolbar with buttons + inputs -->
            <div class="dashboard-toolbar">
                <button id="writeBlogBtn" class="btn-toolbar btn-purple">✍️ Write a Blog</button>

                <div class="input-wrapper">
                    <span class="input-icon">🔎</span>
                    <input type="text" id="searchBlogs" class="search-input search-blogs" placeholder="Search Blogs">
                </div>

                <div class="input-wrapper">
                    <span class="input-icon">📂</span>
                    <select class="topic-select" id="topicSelect">
                        <option value="" disabled selected>-- Select a Category --</option>
                        <option value="Technology">Technology</option>
                        <option value="Science">Science</option>
                        <option value="Health">Health</option>
                        <option value="Education">Education</option>
                        <option value="Travel">Travel</option>
                        <option value="Food">Food</option>
                        <option value="Sports">Sports</option>
                        <option value="Movies & Entertainment">Movies & Entertainment</option>
                        <option value="History">History</option>
                        <option value="General Knowledge">General Knowledge</option>
                        <option value="Finance">Finance</option>
                        <option value="Business">Business</option>
                        <option value="Lifestyle">Lifestyle</option>
                        <option value="Art & Culture">Art & Culture</option>
                        <option value="Environment">Environment</option>
                    </select>
                </div>
                
                <button class="btn-toolbar btn-purple" id="myBlogsBtn">📚 My Blogs</button>
            </div>

        </div>


        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var blog in Model)
            {
                <div class="col">
                    <a href="/Blog/GetBlogById/@blog.BLOGID" style="text-decoration: none; color: inherit;">
                        <div class="blog-card">

                            @if (blog.IMAGE_DATA != null)
                            {
                                <div class="blog-image">
                                    <img src="data:image/png;base64,@Convert.ToBase64String(blog.IMAGE_DATA)" alt="Blog Image" />
                                </div>
                            }

                            <div class="blog-body">
                                <h5 class="blog-title">@blog.BLOG_NAME</h5>
                                <p class="blog-meta" id="author-@blog.BLOGID" data-userid="@blog.USERID">
                                    Author: Loading... • @blog.MODIFIED_DATE
                                </p>
                                <div class="blog-excerpt blog-content">
                                    @Html.Raw(blog.BLOG_CONTENT)
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const username = localStorage.getItem("username") || "";
        const jwtToken = localStorage.getItem("jwtToken");

        document.getElementById("username").textContent = username;

        // Write Blog Button click
        document.getElementById("writeBlogBtn").addEventListener("click", function () {
            if (jwtToken && username!=="") {
                window.location.href = "/Blog/CreateBlog";
            } else {
                alert("You must be logged in to write a blog.");
                window.location.href = "/User/LoginUser";
            }
        });

        // My Blogs Button click
        document.getElementById("myBlogsBtn").addEventListener("click", function () {
            if (jwtToken && username !== "") {
                window.location.href = "/Blog/MyBlogs";
            } else {
                alert("You must be logged in to view your blogs.");
                window.location.href = "/User/LoginUser";
            }
        });
       
        fetch("/User/GetAllUsernames")
            .then(res => res.json())
            .then(userMap => {
                document.querySelectorAll("[data-userid]").forEach(el => {
                    const uid = el.getAttribute("data-userid");
                    const name = userMap[uid] || "User";
                    const parts = el.innerText.split("•");
                    el.innerText = `Author: ${name} • ${parts[1]}`;
                });
            })
            .catch(err => console.error("Error fetching usernames:", err));
        });

</script>
